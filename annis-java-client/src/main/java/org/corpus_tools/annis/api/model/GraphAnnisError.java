/*
 * graphANNIS
 * Access the graphANNIS corpora and execute AQL queries with this service. 
 *
 * The version of the OpenAPI document: 0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.corpus_tools.annis.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.corpus_tools.annis.api.model.GraphAnnisErrorAQLSyntaxError;
import org.corpus_tools.annis.api.model.GraphAnnisErrorLoadingGraphFailed;

/**
 * GraphAnnisError
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-29T11:29:51.782331+02:00[Europe/Berlin]")
public class GraphAnnisError {
  public static final String SERIALIZED_NAME_AQ_L_SYNTAX_ERROR = "AQLSyntaxError";
  @SerializedName(SERIALIZED_NAME_AQ_L_SYNTAX_ERROR)
  private GraphAnnisErrorAQLSyntaxError aqLSyntaxError;

  public static final String SERIALIZED_NAME_AQ_L_SEMANTIC_ERROR = "AQLSemanticError";
  @SerializedName(SERIALIZED_NAME_AQ_L_SEMANTIC_ERROR)
  private GraphAnnisErrorAQLSyntaxError aqLSemanticError;

  public static final String SERIALIZED_NAME_IMPOSSIBLE_SEARCH = "ImpossibleSearch";
  @SerializedName(SERIALIZED_NAME_IMPOSSIBLE_SEARCH)
  private String impossibleSearch;

  public static final String SERIALIZED_NAME_LOADING_GRAPH_FAILED = "LoadingGraphFailed";
  @SerializedName(SERIALIZED_NAME_LOADING_GRAPH_FAILED)
  private GraphAnnisErrorLoadingGraphFailed loadingGraphFailed;

  public static final String SERIALIZED_NAME_NO_SUCH_CORPUS = "NoSuchCorpus";
  @SerializedName(SERIALIZED_NAME_NO_SUCH_CORPUS)
  private String noSuchCorpus;

  public static final String SERIALIZED_NAME_CORPUS_EXISTS = "CorpusExists";
  @SerializedName(SERIALIZED_NAME_CORPUS_EXISTS)
  private String corpusExists;


  public GraphAnnisError aqLSyntaxError(GraphAnnisErrorAQLSyntaxError aqLSyntaxError) {
    
    this.aqLSyntaxError = aqLSyntaxError;
    return this;
  }

   /**
   * Get aqLSyntaxError
   * @return aqLSyntaxError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GraphAnnisErrorAQLSyntaxError getAqLSyntaxError() {
    return aqLSyntaxError;
  }


  public void setAqLSyntaxError(GraphAnnisErrorAQLSyntaxError aqLSyntaxError) {
    this.aqLSyntaxError = aqLSyntaxError;
  }


  public GraphAnnisError aqLSemanticError(GraphAnnisErrorAQLSyntaxError aqLSemanticError) {
    
    this.aqLSemanticError = aqLSemanticError;
    return this;
  }

   /**
   * Get aqLSemanticError
   * @return aqLSemanticError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GraphAnnisErrorAQLSyntaxError getAqLSemanticError() {
    return aqLSemanticError;
  }


  public void setAqLSemanticError(GraphAnnisErrorAQLSyntaxError aqLSemanticError) {
    this.aqLSemanticError = aqLSemanticError;
  }


  public GraphAnnisError impossibleSearch(String impossibleSearch) {
    
    this.impossibleSearch = impossibleSearch;
    return this;
  }

   /**
   * Get impossibleSearch
   * @return impossibleSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpossibleSearch() {
    return impossibleSearch;
  }


  public void setImpossibleSearch(String impossibleSearch) {
    this.impossibleSearch = impossibleSearch;
  }


  public GraphAnnisError loadingGraphFailed(GraphAnnisErrorLoadingGraphFailed loadingGraphFailed) {
    
    this.loadingGraphFailed = loadingGraphFailed;
    return this;
  }

   /**
   * Get loadingGraphFailed
   * @return loadingGraphFailed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GraphAnnisErrorLoadingGraphFailed getLoadingGraphFailed() {
    return loadingGraphFailed;
  }


  public void setLoadingGraphFailed(GraphAnnisErrorLoadingGraphFailed loadingGraphFailed) {
    this.loadingGraphFailed = loadingGraphFailed;
  }


  public GraphAnnisError noSuchCorpus(String noSuchCorpus) {
    
    this.noSuchCorpus = noSuchCorpus;
    return this;
  }

   /**
   * Get noSuchCorpus
   * @return noSuchCorpus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNoSuchCorpus() {
    return noSuchCorpus;
  }


  public void setNoSuchCorpus(String noSuchCorpus) {
    this.noSuchCorpus = noSuchCorpus;
  }


  public GraphAnnisError corpusExists(String corpusExists) {
    
    this.corpusExists = corpusExists;
    return this;
  }

   /**
   * Get corpusExists
   * @return corpusExists
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCorpusExists() {
    return corpusExists;
  }


  public void setCorpusExists(String corpusExists) {
    this.corpusExists = corpusExists;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GraphAnnisError graphAnnisError = (GraphAnnisError) o;
    return Objects.equals(this.aqLSyntaxError, graphAnnisError.aqLSyntaxError) &&
        Objects.equals(this.aqLSemanticError, graphAnnisError.aqLSemanticError) &&
        Objects.equals(this.impossibleSearch, graphAnnisError.impossibleSearch) &&
        Objects.equals(this.loadingGraphFailed, graphAnnisError.loadingGraphFailed) &&
        Objects.equals(this.noSuchCorpus, graphAnnisError.noSuchCorpus) &&
        Objects.equals(this.corpusExists, graphAnnisError.corpusExists);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aqLSyntaxError, aqLSemanticError, impossibleSearch, loadingGraphFailed, noSuchCorpus, corpusExists);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GraphAnnisError {\n");
    sb.append("    aqLSyntaxError: ").append(toIndentedString(aqLSyntaxError)).append("\n");
    sb.append("    aqLSemanticError: ").append(toIndentedString(aqLSemanticError)).append("\n");
    sb.append("    impossibleSearch: ").append(toIndentedString(impossibleSearch)).append("\n");
    sb.append("    loadingGraphFailed: ").append(toIndentedString(loadingGraphFailed)).append("\n");
    sb.append("    noSuchCorpus: ").append(toIndentedString(noSuchCorpus)).append("\n");
    sb.append("    corpusExists: ").append(toIndentedString(corpusExists)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


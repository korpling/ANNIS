<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>annis-all</artifactId>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <version>3.1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>annis-gui</artifactId>
  <packaging>war</packaging>

  <organization>
    <name>Corpuslinguistic working group Humboldt University Berlin</name>
    <url>http://www.linguistik.hu-berlin.de/institut/professuren/korpuslinguistik/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
  </properties>

  <build>
    <finalName>annis-gui</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${basedir}/target/extra-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
   
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <webResources>
            <webResource>
              <directory>${basedir}/src/main/webapp/WEB-INF</directory>
              <includes>
                <include>web.xml</include>
              </includes>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
            </webResource>
          </webResources>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
              <resources>          
                <resource>
                  <directory>../</directory>
                  <includes>
                    <include>NOTICE</include>
                    <include>CHANGELOG</include>
                    <include>LICENSE</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>THIRD-PARTY</directory>
                  <targetPath>THIRD-PARTY</targetPath>
                  <excludes />
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
   
      <!-- 
      Maven does not copy the "bundle" artifacts to WEB-INF/lib so we have to do it by ourself. 
      See http://jira.codehaus.org/browse/MWAR-267 for the bug report and
      http://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-artifacts.html
      for the workaround that was applied here
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
                  <artifactId>salt-saltCommon</artifactId>
                  <version>1.1.6</version>
                  <type>bundle</type>
                </artifactItem>
                <artifactItem>
                  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
                  <artifactId>salt-graph</artifactId>
                  <version>1.1.6</version>
                  <type>bundle</type>
                </artifactItem>
                <artifactItem>
                  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
                  <artifactId>salt-saltCore</artifactId>
                  <version>1.1.6</version>
                  <type>bundle</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
   
      <!-- A simple Jetty test server at http://localhost:8080/annis-gui can 
      be launched with the Maven goal jetty:run and stopped with jetty:stop -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.0.4.v20130625</version>
        <configuration>
          <webApp>
            <contextPath>/annis-gui</contextPath>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <resourcesAsCSV>target/annis-gui/,src/main/webapp/</resourcesAsCSV>
            </baseResource>
          </webApp>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-continuation</artifactId>
            <version>9.0.4.v20130625</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <!-- workaround for automatically compile SCSS file in maven
      http://dev.vaadin.com/ticket/10291
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <classpathScope>compile</classpathScope>
              <mainClass>com.vaadin.sass.SassCompiler</mainClass>
              <arguments>
                <argument>src/main/webapp/VAADIN/themes/annis/styles.scss</argument>
                <argument>src/main/webapp/VAADIN/themes/annis/styles.css</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>

  <dependencies>
    
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-libgui</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <!-- do not use commons logging -->
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-visualizers</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
      <type>jar</type>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
 

  </dependencies>
  <name>annis-gui</name>
</project>

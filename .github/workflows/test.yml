name: Automated tests
on: push

jobs:
  test_jdk8:
    name: Execute all automated tests JDK 8
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-8-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-8-
      - name: Cache test corpora
        uses: actions/cache@v2
        with:
          path: "*.zip"
          key: ${{ runner.os }}-corpora-${{ hashFiles('misc/import-test-corpora.sh') }}
      - name: Set JAVA_HOME to included JDK 8
        run: echo JAVA_HOME=$JAVA_HOME_8_X64 >> $GITHUB_ENV
      - run: misc/download-annis-cli.sh 0.30.0
        env:
          OS_NAME: linux
      - run: misc/import-test-corpora.sh
      - name: Run Maven install (includes tests)
        run: mvn install
  test_jdk11:
    name: Execute all automated tests on JDK 11
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-11-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-11-
      - name: Cache test corpora
        uses: actions/cache@v2
        with:
          path: "*.zip"
          key: ${{ runner.os }}-corpora-${{ hashFiles('misc/import-test-corpora.sh') }}
      - name: Set JAVA_HOME to included JDK 11
        run: echo JAVA_HOME=$JAVA_HOME_11_X64 >> $GITHUB_ENV
      - run: misc/download-annis-cli.sh 0.30.0
        env:
          OS_NAME: linux
      - run: misc/import-test-corpora.sh
      - name: Run Maven Tests with enabled code coverage and upload results to SonarCloud
        run: mvn -B -Pcoverage install sonar:sonar -Dsonar.projectKey=korpling_ANNIS -Dsonar.organization=korpling -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test_docs:
    name: Test documentation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: misc/download-mdbook.sh 0.4.2
        env:
          OS_NAME: linux
      - run: mdbook build docs/user-guide/
      - run: mdbook build docs/developer-guide/
      - run: mdbook build docs/online-help/
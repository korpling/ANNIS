/*
 * graphANNIS
 * Access the graphANNIS corpora and execute AQL queries with this service. 
 *
 * OpenAPI spec version: 0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.corpus_tools.annis;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.corpus_tools.annis.CorpusConfigurationContext;
import org.corpus_tools.annis.CorpusConfigurationView;
import org.corpus_tools.annis.ExampleQuery;
import org.corpus_tools.annis.VisualizerRule;
/**
 * CorpusConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-26T15:55:16.485632+02:00[Europe/Berlin]")
public class CorpusConfiguration {
  @SerializedName("context")
  private CorpusConfigurationContext context = null;

  @SerializedName("view")
  private CorpusConfigurationView view = null;

  @SerializedName("example_queries")
  private List<ExampleQuery> exampleQueries = null;

  @SerializedName("visualizers")
  private List<VisualizerRule> visualizers = null;

  public CorpusConfiguration context(CorpusConfigurationContext context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @Schema(description = "")
  public CorpusConfigurationContext getContext() {
    return context;
  }

  public void setContext(CorpusConfigurationContext context) {
    this.context = context;
  }

  public CorpusConfiguration view(CorpusConfigurationView view) {
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @Schema(description = "")
  public CorpusConfigurationView getView() {
    return view;
  }

  public void setView(CorpusConfigurationView view) {
    this.view = view;
  }

  public CorpusConfiguration exampleQueries(List<ExampleQuery> exampleQueries) {
    this.exampleQueries = exampleQueries;
    return this;
  }

  public CorpusConfiguration addExampleQueriesItem(ExampleQuery exampleQueriesItem) {
    if (this.exampleQueries == null) {
      this.exampleQueries = new ArrayList<ExampleQuery>();
    }
    this.exampleQueries.add(exampleQueriesItem);
    return this;
  }

   /**
   * An array of example queries for the corpus with a description.
   * @return exampleQueries
  **/
  @Schema(description = "An array of example queries for the corpus with a description.")
  public List<ExampleQuery> getExampleQueries() {
    return exampleQueries;
  }

  public void setExampleQueries(List<ExampleQuery> exampleQueries) {
    this.exampleQueries = exampleQueries;
  }

  public CorpusConfiguration visualizers(List<VisualizerRule> visualizers) {
    this.visualizers = visualizers;
    return this;
  }

  public CorpusConfiguration addVisualizersItem(VisualizerRule visualizersItem) {
    if (this.visualizers == null) {
      this.visualizers = new ArrayList<VisualizerRule>();
    }
    this.visualizers.add(visualizersItem);
    return this;
  }

   /**
   * An array of rules which visualizers to show for the search results.
   * @return visualizers
  **/
  @Schema(description = "An array of rules which visualizers to show for the search results.")
  public List<VisualizerRule> getVisualizers() {
    return visualizers;
  }

  public void setVisualizers(List<VisualizerRule> visualizers) {
    this.visualizers = visualizers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CorpusConfiguration corpusConfiguration = (CorpusConfiguration) o;
    return Objects.equals(this.context, corpusConfiguration.context) &&
        Objects.equals(this.view, corpusConfiguration.view) &&
        Objects.equals(this.exampleQueries, corpusConfiguration.exampleQueries) &&
        Objects.equals(this.visualizers, corpusConfiguration.visualizers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, view, exampleQueries, visualizers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CorpusConfiguration {\n");
    
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    exampleQueries: ").append(toIndentedString(exampleQueries)).append("\n");
    sb.append("    visualizers: ").append(toIndentedString(visualizers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * graphANNIS
 * Access the graphANNIS corpora and execute AQL queries with this service. 
 *
 * OpenAPI spec version: 0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.corpus_tools.annis;

import org.corpus_tools.ApiException;
import org.corpus_tools.annis.Body;
import org.corpus_tools.annis.Group;
import org.corpus_tools.annis.InlineResponse202;
import org.corpus_tools.annis.Job;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdministrationApi
 */
@Ignore
public class AdministrationApiTest {

    private final AdministrationApi api = new AdministrationApi();

    /**
     * Delete the user group given by its name
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGroupTest() throws ApiException {
        String name = null;
        api.deleteGroup(name);

        // TODO: test validations
    }
    /**
     * Get all requested corpora as ZIP-file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportPostTest() throws ApiException {
        Body body = null;
        InlineResponse202 response = api.exportPost(body);

        // TODO: test validations
    }
    /**
     * Get the status of the background job with the UUID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobTest() throws ApiException {
        String uuid = null;
        api.getJob(uuid);

        // TODO: test validations
    }
    /**
     * Import all corpora which are part of the uploaded ZIP-file
     *
     * This will search for all GraphML and relANNIS files in the uploaded ZIP file and imports them.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importPostTest() throws ApiException {
        Object body = null;
        Boolean overrideExisting = null;
        InlineResponse202 response = api.importPost(body, overrideExisting);

        // TODO: test validations
    }
    /**
     * Get all available user groups
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGroupsTest() throws ApiException {
        List<Group> response = api.listGroups();

        // TODO: test validations
    }
    /**
     * Add or replace the user group given by its name
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGroupTest() throws ApiException {
        Group body = null;
        String name = null;
        api.putGroup(body, name);

        // TODO: test validations
    }
}

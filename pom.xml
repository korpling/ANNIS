<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>org.corpus-tools</groupId>
	<artifactId>annis</artifactId>
	<version>4.2.0-SNAPSHOT</version>
	<name>ANNIS user interface</name>
	<packaging>jar</packaging>
	<scm>
		<connection>scm:git:https://github.com/korpling/ANNIS.git</connection>
		<developerConnection>scm:git:git@github.com:korpling/ANNIS.git</developerConnection>
		<url>https://github.com/korpling/ANNIS</url>
	</scm>

	<organization>
		<name>Corpuslinguistic working group Humboldt University Berlin</name>
		<url>http://www.linguistik.hu-berlin.de/institut/professuren/korpuslinguistik/</url>
	</organization>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<vaadin.version>8.13.2</vaadin.version>
		<vaadin.productionMode>true</vaadin.productionMode>
		<start-class>org.corpus_tools.annis.gui.AnnisUiApplication</start-class>
		<graphannis.version>1.0.2</graphannis.version>
		<antlr4.version>4.7.2</antlr4.version>
		<spring.profiles.active>server</spring.profiles.active>
		<swagger-core-version>1.5.24</swagger-core-version>
		<gson-fire-version>1.8.4</gson-fire-version>
		<kotlin.version>1.4.0</kotlin.version>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/native/</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.6</version>
					<configuration>
						<excludes>
							<exclude>VAADIN/**</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>jacoco.agent.arg</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>report</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
					<executions>
						<execution>
							<id>repackage</id>
							<goals>
								<goal>repackage</goal>
							</goals>
							<configuration>
								<classifier>${spring.profiles.active}</classifier>
								<executable>true</executable>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.corpus-tools</groupId>
					<artifactId>cff-maven-plugin</artifactId>
					<version>0.4.0</version>
					<configuration>
						<input>${project.basedir}/misc/cff-templates/CITATION_input.yml</input>
						<includeEmail>false</includeEmail>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>co.enear.maven.plugins</groupId>
				<artifactId>keepachangelog-maven-plugin</artifactId>
				<version>2.1.1</version>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-release-plugin</artifactId>
		        <configuration>
		            <preparationGoals>clean verify keepachangelog:release cff:create cff:third-party-folder scm:add -Dincludes=""CHANGELOG.md,CITATION.cff,THIRD-PARTY/*,src/main/webapp/VAADIN/help/*"</preparationGoals>
		        </configuration>
		    </plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<optimizationLevel>9</optimizationLevel>
					<style>OBF</style>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<version>${antlr4.version}</version>
				<configuration>
					<sourceDirectory>src/main/antlr4</sourceDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<timestampFormat>{0, time, yyyy-MM-dd_HH-mm-ss}</timestampFormat>
					<shortRevisionLength>10</shortRevisionLength>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${jacoco.agent.arg}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
			</plugin>
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>download-linux-binaries</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://github.com/korpling/graphANNIS/releases/download/v${graphannis.version}/graphannis-webservice</url>
							<outputDirectory>${project.build.directory}/native/linux-x86-64/</outputDirectory>
							<sha256>45235c0a7b869154c2876ca5d5eb31ab82ba112b87cb3750cb900074f2189771</sha256>
						</configuration>
					</execution>
					<execution>
						<id>download-windows-binaries</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://github.com/korpling/graphANNIS/releases/download/v${graphannis.version}/graphannis-webservice.exe</url>
							<outputDirectory>${project.build.directory}/native/win32-x86-64/</outputDirectory>
							<sha256>d3940c0b77c026fcd468677a25372676d8c23b8c3565f5301bb517fd7ed7e76d</sha256>
						</configuration>
					</execution>
					<execution>
						<id>download-mac-binaries</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://github.com/korpling/graphANNIS/releases/download/v${graphannis.version}/graphannis-webservice.osx</url>
							<outputDirectory>${project.build.directory}/native/darwin/</outputDirectory>
							<sha256>21d9484525634f6d37cd3c192449b0f999257f7b0c9e16f293748241ea145520</sha256>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>5.0.1</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								${project.basedir}/src/main/resources/openapi.yml
							</inputSpec>
							<generatorName>java</generatorName>
							<apiPackage>org.corpus_tools.annis.api</apiPackage>
							<modelPackage>org.corpus_tools.annis.api.model</modelPackage>
							<generateSupportingFiles>true</generateSupportingFiles>
							<supportingFilesToGenerate>ApiResponse.java,ApiException.java,ApiCallback.java,Pair.java,ApiClient.java,Configuration.java,ProgressRequestBody.java,JSON.java,Authentication.java,StringUtil.java,ApiKeyAuth.java,HttpBasicAuth.java,ProgressResponseBody.java,HttpBearerAuth.java</supportingFilesToGenerate>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<configOptions>
								<java8>true</java8>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<additionalProperties>serializableModel=true</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.keycloak.bom</groupId>
				<artifactId>keycloak-adapter-bom</artifactId>
				<version>11.0.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-compatibility-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-compatibility-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-compatibility-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-compatibility-client-compiled</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
		</dependency>
		
		<dependency>
		  <groupId>com.github.jjYBdx4IL.utils</groupId>
		  <artifactId>swing-utils</artifactId>
		  <version>1.0</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.corpus-tools</groupId>
			<artifactId>salt-api</artifactId>
			<version>3.4.2</version>
			<exclusions>
				<!-- Salt uses non-GWT version of Guava, which will fail with our widgetset -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>io.gsonfire</groupId>
			<artifactId>gson-fire</artifactId>
			<version>${gson-fire-version}</version>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- Add this dependency because otherwise JavaDoc will fail when parsing 
			@javax.transactional.Transactional annotations -->
		<dependency>
			<groupId>javax.interceptor</groupId>
			<artifactId>javax.interceptor-api</artifactId>
			<version>1.2.2</version>
		</dependency>


		<dependency>
			<groupId>com.github.vaadin4qbanos</groupId>
			<artifactId>jsclipboard</artifactId>
			<version>1.0.12</version>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-server</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.10.3</version>
		</dependency>


		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.hp.gagawa</groupId>
			<artifactId>gagawa</artifactId>
			<version>1.0.1</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
			<version>${antlr4.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>${antlr4.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.romankh3</groupId>
			<artifactId>image-comparison</artifactId>
			<version>4.3.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.14.2</version>
		</dependency>

		<dependency>
			<groupId>org.aeonbits.owner</groupId>
			<artifactId>owner</artifactId>
			<version>1.0.10</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.24.1</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.6</version>
		</dependency>

		<dependency>
			<groupId>com.moandjiezana.toml</groupId>
			<artifactId>toml4j</artifactId>
			<version>0.7.2</version>
		</dependency>

		<dependency>
			<groupId>org.tomlj</groupId>
			<artifactId>tomlj</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.3.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava-gwt</artifactId>
			<version>20.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>

		<dependency>
			<groupId>com.github.mvysny.kaributesting</groupId>
			<artifactId>karibu-testing-v8</artifactId>
			<version>1.2.6</version>
			<scope>test</scope>
		</dependency>

		<!-- other widget sets we use -->
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>popupbutton</artifactId>
			<version>3.0.0</version>
		</dependency>


	</dependencies>

	<profiles>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>desktop</id>
			<properties>
				<spring.profiles.active>desktop</spring.profiles.active>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<archive>
								<manifestEntries>
									<splashscreen-image>BOOT-INF/classes/splashscreen.gif</splashscreen-image>
								</manifestEntries>
							</archive>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mdbook</id>
			<activation>
				<file>
					<exists>${user.home}/.cargo/bin/mdbook</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<!-- Compile the online help with mdBook -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>compile-online-help</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${user.home}/.cargo/bin/mdbook</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-d</argument>
										<argument>${project.basedir}/src/main/webapp/VAADIN/help/</argument>
										<argument>${project.basedir}/docs/online-help/</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- the online help directory should be cleaned as well -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>${project.basedir}/src/main/webapp/VAADIN/help/</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>

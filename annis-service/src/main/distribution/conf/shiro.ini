[main]
annisRealm = annis.security.ANNISUserRealm
annisRealm.resourcePath=/etc/annis/user_config/
annisRealm.authenticationCachingEnabled = true

globalPermResolver = annis.security.ANNISRolePermissionResolver
globalPermResolver.resourcePath = /etc/annis/user_config/

#enable caching which is really needed since we are checking the authorization in every HTTP request
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager

securityManager.realms = $annisRealm
# use native Jiro Session, but make them non-persistant
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.authorizer.rolePermissionResolver = $globalPermResolver
securityManager.cacheManager = $cacheManager

authcBasicAnonymous = annis.security.BasicAuthOrAnonymousFilter
authcBasicAnonymous.anonymousUser=anonymous
authcBasicAnonymous.anonymousPassword=anonymous

[urls]
# this REST based API should not have any sessions and will give non-logged in
# users the anonymous account
/annis/query/**= noSessionCreation, authcBasicAnonymous
/annis/meta/**= noSessionCreation, authcBasicAnonymous

# allow anonymous access for on user configuration 
# (make sure the user has the "admin:read:userconfig" and "admin:write:userconfig" permissions)
/annis/admin/userconfig= noSessionCreation, authcBasicAnonymous
# in general always login (no anonymous fallback) for administration
/annis/admin/** = noSessionCreation, authcBasic
